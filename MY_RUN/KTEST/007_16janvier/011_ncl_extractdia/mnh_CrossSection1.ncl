load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_code.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_csm.ncl"
load "MESONHtools.ncl"

;========================================================================;
; Example script to plot vertical cross-section along a defined line from 
; MESONH netcdf file generated with extractdia
;========================================================================;


begin

;=================================================;
; Open file 
;=================================================;
; MESONH netcdf input file generated by extractdia
  mnh_file="16JAN.1.12B18.001cvKCL.nc"
  a = addfile(mnh_file, "r")

;=================================================;
; We generate plots, but what kind do we prefer?
; For paper quality plot do not use ncgm or eps
;=================================================;
  type = "x11"
; type = "ps"
; type = "pdf"
; type = "ps"

;=================================================;
; Open the workstation and choose colormap
;=================================================;
  wks = gsn_open_wks(type,"plt_CrossSection1")
  gsn_define_colormap(wks,"topo_15lev")


;=================================================;
; Get informations on variable sizes
;=================================================;
  mdims = getfilevardimsizes(a,"UT") ; get some dimension sizes for the file
  nd = dimsizes(mdims)

;=================================================;
; Read  some variables from mnh_file
;=================================================;
  ZS =a->ZSBIS(0,:,:)

  th = a->THT(0,:,:,:)
  th@long_name="Potential Temperature"
  th@description="TH"

  um = a->UT(0,:,:,:)
  um@description="U"

  z= a->ALT(0,:,:,:)
  z@description="Height"
    
  zmin = 0.
  zmax = 6.                          ; We are only interested in the first 6km
  nz   = floattoint(zmax + 1)

;=================================================;
; Use MESONHtools procedure to set map projection
; and return latitude and longitude values
;=================================================;

  resmap=True

  lat2d = new(dimsizes(ZS),"double")
  lat2d@units="degrees_north"
  lat2d=0.
  lon2d = new(dimsizes(ZS),"double")
  lon2d@units="degrees_east"
  lon2d=0.
  icornerMap = new((/2,2/),"integer")
  icornerMap(:,:)=0

  MESONH_map_c (a, resmap, lat2d, lon2d, icornerMap)

;=================================================;
; Define Other Resources for map ploting
;=================================================;
  resmap@gsnFrame               = False

  resmap@mpFillOn               = False
  resmap@mpGridAndLimbOn        = True         ; turn on lat/lon lines
  resmap@mpGridLatSpacingF      = 10.          ; spacing for lat lines
  resmap@mpGridLonSpacingF      = 10.          ; spacing for lon lines
  resmap@mpDataBaseVersion      = "HighRes"    ; choose highres map data version (must be donwloaded)

  resmap@cnFillOn               = True
  resmap@cnLinesOn              = False
  resmap@cnLevelSelectionMode   = "ExplicitLevels"
  cnLevels                      = (/1,25,50,75,100,125,150,175,200,225,250,275,300/)
  resmap@cnLevels               = cnLevels

  FirstPlot = True

;=================================================;
; Planes definition and interpolation
;=================================================;
    do ip = 1, 3      	; we are doing 3 plots
			; all with the pivot point (plane) in the center of the domain
			; at angles 0, 45 and 90
 ;  
 ;                   |
 ;       angle=0 is  |
 ;                   |
 ; 
; Define the plane where the cross-section will be done
; ------------------------------------------------------
        plane = new(2,float)
        plane = (/ mdims(nd-1)/2, mdims(nd-2)/2 /)    ; pivot point is center of domain (x,y)

        opts = False

        if(ip .eq. 1) then
          angle = 90.
          X_plane = wrf_user_intrp2d(lon2d,plane,angle,opts)
          X_desc = "longitude"
        end if
        if(ip .eq. 2) then
          angle = 0.
          X_plane = wrf_user_intrp2d(lat2d,plane,angle,opts)
          X_desc = "latitude"
        end if
        if(ip .eq. 3) then
          angle = 45.
          X_plane = wrf_user_intrp2d(lon2d,plane,angle,opts)
          X_desc = "longitude"
        end if

; Interpolate fields onto the defined plane
; --------------------------------------------
        um_plane = wrf_user_intrp3d(um,z,"v",plane,angle,opts)
        th_plane = wrf_user_intrp3d(th,z,"v",plane,angle,opts)


; Find the index where 6km is - only need to do this once
;--------------------------------------------------------
        if ( FirstPlot ) then
          zz = wrf_user_intrp3d(z,z,"v",plane,angle,opts)
          printVarSummary(zz)
          b = ind(zz(:,0) .gt. zmax*1000. )
          zmax_pos = b(0) - 1
          if ( abs(zz(zmax_pos,0)-zmax*1000.) .lt. abs(zz(zmax_pos+1,0)-zmax*1000.) ) then
            zspan = b(0) - 1
          else
            zspan = b(0)
          end if
          delete(zz)
          delete(b)
          FirstPlot = False
         end if

; X-axis labels
;--------------
      dimsX = dimsizes(X_plane)
      xmin  = X_plane(0)
      xmax  = X_plane(dimsX(0)-1)
      xspan = dimsX(0)-1
      nx    =  2
        
; Options for XY Plots
;-----------------------
        opts_xy                         = True

        opts_xy@gsnFrame                = False
        opts_xy@gsnDraw                 = False

        opts_xy@tiXAxisString           = X_desc
        opts_xy@tiYAxisString           = "Height (km)"
        opts_xy@tiXAxisFontHeightF      = 0.020
        opts_xy@tiYAxisFontHeightF      = 0.020

; Resources to plot the topography (missing values in fields)
;-------------------------------------------------------------
        opts_xy@cnMissingValPerimOn     = True
        opts_xy@cnMissingValFillColor   = "red"
        opts_xy@cnMissingValFillPattern = 8
    
; Tickmarks / Labels
;---------------------
        opts_xy@tmXTOn               = False
        opts_xy@tmYROn               = False
        opts_xy@tmXBMode             = "Explicit"
        opts_xy@tmXBValues           = fspan(0,xspan,nx)         ; Create tick marks
        opts_xy@tmXBLabels           = sprintf("%.1f",fspan(xmin,xmax,nx))  ; Create labels
        opts_xy@tmXBLabelFontHeightF = 0.015
        opts_xy@tmYLMode             = "Explicit"
        opts_xy@tmYLValues           = fspan(0,zspan,nz)          ; Create tick marks
        opts_xy@tmYLLabels           = sprintf("%.1f",fspan(zmin,zmax,nz))  ; Create labels
        opts_xy@tmXBMajorLengthF     = 0.02
        opts_xy@tmYLMajorLengthF     = 0.02
        opts_xy@tmYLLabelFontHeightF = 0.015

        opts_xy@lbAutoManage          = False             ; we control label bar
        opts_xy@pmLabelBarWidthF      = 0.5               ; 
        opts_xy@pmLabelBarHeightF     = 0.1               ; 


; Plotting options for U
;-----------------------
        opts_um                              = opts_xy
        opts_um@pmLabelBarOrthogonalPosF     = -0.1 
        opts_um@cnFillOn                     = True
        opts_um@gsnRightStringParallelPosF   = 0.1
        opts_um@gsnRightStringOrthogonalPosF = 0.01


; Plotting options for Temperature
;---------------------------------
        opts_th                          = opts_xy
        opts_th@cnInfoLabelZone          = 1
        opts_th@cnInfoLabelSide          = "Top"
        opts_th@cnInfoLabelPerimOn       = True
        opts_th@cnInfoLabelOrthogonalPosF= -0.00005

        opts_th@gsnLeftStringParallelPosF = 0.9
        opts_th@gsnLeftStringOrthogonalPosF = 0.01


; Get the contour info for the th and um
;----------------------------------------
        contour_th = gsn_csm_contour(wks,th_plane(0:zmax_pos,:),opts_th)
        contour_um = gsn_csm_contour(wks,um_plane(0:zmax_pos,:),opts_um)

;================
; MAKE PLOTS         
;================

; Horizontal plot with topography
;-----------------------------------------------------------------------
        plot=gsn_csm_contour_map(wks,ZS,resmap)

; Draw line that shows the position of the cross section
;--------------------------------------------------------
        lat_plane = wrf_user_intrp2d(lat2d,plane,angle,opts)
        lon_plane = wrf_user_intrp2d(lon2d,plane,angle,opts)

        lnres = True
        lnres@gsLineThicknessF = 3.0
        lnres@gsLineColor = "Red"
        do ii = 0,dimsX(0)-2
           gsn_polyline(wks,plot,(/lon_plane(ii),lon_plane(ii+1)/),(/lat_plane(ii),lat_plane(ii+1)/),lnres)
         end do
        frame(wks)
        delete(lon_plane)
        delete(lat_plane)

        pltres = True
        pltres@FramePlot = True


; Draw Vertical cross-section
;--------------------------

        overlay(contour_um,contour_th)    ; plot x-section
        draw(contour_um)
        frame(wks)


; Delete options and fields, so we don't have carry over
;------------------------------------------------------
        delete(opts_xy)
        delete(opts_th)
        delete(opts_um)
        delete(th_plane)
        delete(um_plane)
        delete(X_plane)

end do  ; make next cross section


end
