INTERFACE
Subroutine rttov_scatt_k( & 
     & errorstatus,        &! out
     & nwp_levels,         &! in
     & nrt_levels,         &! in
     & nfrequencies,       &! in
     & nchannels,          &! in
     & nbtout,             &! in
     & nprofiles,          &! in
     & polarisations,      &! in
     & channels,           &! in
     & frequencies,        &! in
     & lprofiles,          &! in
     & lsprofiles,         &! in
     & profiles,           &! inout  
     & cld_profiles,       &! in
     & coef_rttov,         &! in
     & coef_scatt,         &! in
     & calcemiss,          &! in
     & emissivity_in,      &! inout
     & profiles_k,         &! inout
     & cld_profiles_k,     &! inout
     & emissivity_in_k,    &! inout
     & cld_radiance)        ! inout

  Use rttov_const, Only :   &
       & errorstatus_success ,&
       & errorstatus_fatal   ,&
       & sensor_id_mw

  Use rttov_types, Only :    &
       & rttov_coef           ,&
       & rttov_scatt_coef     ,&
       & geometry_Type        ,&
       & profile_Type         ,&
       & profile_cloud_Type   ,&
       & profile_scatt_aux    ,&
       & transmission_Type    ,&
       & radiance_Type        ,&
       & radiance_cloud_Type 

  Use parkind1, Only : jpim     ,jprb
  
  Implicit None

  Integer (Kind=jpim), Intent (in)  :: nwp_levels                              ! Number of levels
  Integer (Kind=jpim), Intent (in)  :: nrt_levels                              ! Number of levels
  Integer (Kind=jpim), Intent (in)  :: nprofiles                               ! Number of profiles
  Integer (Kind=jpim), Intent (in)  :: nfrequencies                            ! Number of frequencies  
  Integer (Kind=jpim), Intent (in)  :: nchannels                               ! Number of channels*profiles=radiances
  Integer (Kind=jpim), Intent (in)  :: nbtout                                  ! Number of output radiances
  Integer (Kind=jpim), Intent (in)  :: channels      (nfrequencies)            ! Channel indices
  Integer (Kind=jpim), Intent (in)  :: frequencies   (nchannels)               ! Frequency indices
  Integer (Kind=jpim), Intent (in)  :: polarisations (nchannels,3)             ! Polarisation indices
  Integer (Kind=jpim), Intent (in)  :: lprofiles     (nfrequencies)            ! Profile indices
  Integer (Kind=jpim), Intent (in)  :: lsprofiles    (nchannels)               ! Profile indices
  Integer (Kind=jpim), Intent (out) :: errorstatus   (nprofiles)               ! Error return flag
  Logical,             Intent (in)    :: calcemiss        (nchannels)          ! Surface emmissivity 
  Real    (Kind=jprb), Intent (in)    :: emissivity_in    (nchannels)          ! Surface emmissivity 
  Real    (Kind=jprb), Intent (inout) :: emissivity_in_k  (nchannels)            
  Type (profile_Type),        Intent (inout) :: profiles        (nprofiles)    ! Atmospheric profiles
  Type (profile_Type),        Intent (inout) :: profiles_k      (nbtout)    
  Type (rttov_coef),          Intent (in)    :: coef_rttov                     ! RTTOV Coefficients
  Type (rttov_scatt_coef),    Intent (in)    :: coef_scatt                     ! RTTOV_SCATT Coefficients
  Type (profile_cloud_Type),  Intent (in)    :: cld_profiles    (nprofiles)    ! Cloud profiles with NWP levels
  Type (profile_cloud_Type),  Intent (inout) :: cld_profiles_k  (nbtout)   
  Type (radiance_cloud_Type), Intent (inout) :: cld_radiance                   ! Radiances

End Subroutine rttov_scatt_k
END INTERFACE
