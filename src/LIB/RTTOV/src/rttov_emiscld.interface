Interface
!
Subroutine rttov_emiscld(  &
     & errorstatus,       &! out
     & nfrequencies,   &   ! in
     & nchannels,    &     ! in
     & nprofiles,    &     ! in
     & nlevels ,     &     ! in
     & channels,     &     ! in
     & polarisations,  &   ! in
     & lprofiles,    &     ! in
     & profiles,     &     ! in  (surftype and zenangle)
     & coef,         &     ! in  (frequencies mw/ir/hi)
     & cld_profiles, &     ! in
     & cld_radiance)       ! inout  (only cldemis calculated)
  Use rttov_const, Only :    &
       pi                   ,&
       gravity              ,&
       surftype_land        ,&
       nvalhusta            ,&
       zhustaom             ,&
       zhustaa1             ,&
       zhustaa2             ,&
       zhustaa3             ,&
       zhustab1             ,&
       zhustab2             ,&
       zhustab3             ,&
       zhustac1             ,&
       zhustac2             ,&
       zhustac3             ,&
       zhustad1             ,&
       zhustad2             ,&
       zhustad3             ,&
       zhustae1             ,&
       zhustae2             ,&
       zhustae3             ,&
       zhustaf1             ,&
       zhustaf2             ,&
       zhustaf3             ,&
       low_re               ,&
       upp_re               ,&
       nvalice              ,&
       ziceom               ,&
       ziceclmna            ,&
       ziceclmnb            ,&
       ziceclmnc            ,&
       ziceclmnd            ,&
       ziceaggra            ,&
       ziceaggrb            ,&
       ziceaggrc            ,&
       ziceaggrd            ,&
       sensor_id_ir         ,&
       sensor_id_mw         ,&
       sensor_id_hi

  Use rttov_types, Only :    &
       rttov_coef           ,&
       profile_Type         ,&
       profile_cloud_Type   ,&
       radiance_cloud_Type

  Use parkind1, Only : jpim     ,jprb
  Implicit None


  Integer(Kind=jpim),        Intent(in)    :: nfrequencies        ! Number of freqs*profs
  Integer(Kind=jpim),        Intent(in)    :: nchannels! Number of computed radiances
                                                       !  (= channels used * profiles)
  Integer(Kind=jpim),        Intent(in)    :: nprofiles           ! Number of profiles
  Integer(Kind=jpim),        Intent(in)    :: nlevels                ! Number of levels
  Integer(Kind=jpim),        Intent(out)   :: errorstatus(nprofiles)  ! Error return code
  Integer(Kind=jpim),        Intent(in)    :: channels(nfrequencies) ! Channel indices
  Integer(Kind=jpim),        Intent(in)    :: lprofiles(nfrequencies)! Profiles indices
  Integer(Kind=jpim),        Intent(in)    :: polarisations(nchannels,3)      ! Channel indices
  Type(profile_Type),        Intent(in)    :: profiles(nprofiles) ! Profiles on RTTOV levels
  Type(profile_cloud_Type),  Intent(in)    :: cld_profiles(nprofiles)! Cloud profiles on NWP levels
  Type(rttov_coef),          Intent(in)    :: coef          ! Coefficients
  Type(radiance_cloud_Type), Intent(inout) :: cld_radiance  ! radiances (mw/cm-1/ster/sq.m)



End Subroutine rttov_emiscld
End Interface
