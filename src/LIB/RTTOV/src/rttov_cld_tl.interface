Interface
Subroutine Rttov_cld_tl ( &
     errorstatus,    & ! out
     nfrequencies,   & ! in
     nchannels,      & ! in
     nbtout,         & ! in
     nprofiles,      & ! in
     channels,       & ! in
     polarisations,  & ! in
     lprofiles,      & ! in
     profiles,       & ! in
     cld_profiles,   & ! in
     coef,           & ! in
     calcemis,       & ! in
     emissivity,     & ! inout
     profiles_tl,    & ! in
     cld_profiles_tl,& ! in
     emissivity_tl,  & ! inout
     cld_radiance,   & ! inout
     cld_radiance_tl ) ! inout

  Use rttov_const, Only :   &
       errorstatus_success ,&
       errorstatus_fatal   ,&
       overlap_scheme

  Use rttov_types, Only :    &
       rttov_coef           ,&
       geometry_Type  ,&
       profile_Type         ,&
       profile_cloud_Type   ,&
       transmission_Type    ,&
       radiance_Type        ,&
       radiance_cloud_Type

  Use parkind1, Only : jpim     ,jprb
  Implicit None
!  include "rttov_intradov_tl.h"

  Integer(Kind=jpim),        Intent(in)    :: nfrequencies
  Integer(Kind=jpim),        Intent(in)    :: nchannels
  Integer(Kind=jpim),        Intent(in)    :: nbtout
  Integer(Kind=jpim),        Intent(in)    :: nprofiles
  Integer(Kind=jpim),        Intent(in)    :: channels(nfrequencies)
  Integer(Kind=jpim),        Intent(in)    :: polarisations(nchannels,3)
  Integer(Kind=jpim),        Intent(in)    :: lprofiles(nfrequencies)
  Type(profile_Type),        Intent(inout) :: profiles(nprofiles)
  Type(profile_cloud_Type),  Intent(in)    :: cld_profiles(nprofiles)
  Type(rttov_coef),          Intent(in)    :: coef
  Logical,                   Intent(in)    :: calcemis(nchannels)
  Real(Kind=jprb),           Intent(inout) :: emissivity(nchannels)
  Type(radiance_cloud_type), Intent(inout) :: cld_radiance! in because of meme allocation


  Type(profile_Type),        Intent(in)    :: profiles_tl(nprofiles)
  Type(profile_cloud_Type),  Intent(in)    :: cld_profiles_tl(nprofiles)
  Real(Kind=jprb),           Intent(inout) :: emissivity_tl(nchannels)
  Type(radiance_cloud_type), Intent(inout) :: cld_radiance_tl ! in because of meme allocation
  Integer(Kind=jpim),        Intent(out)   :: errorstatus(nprofiles)


End Subroutine Rttov_cld_tl
End Interface
