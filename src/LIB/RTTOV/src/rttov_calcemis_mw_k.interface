Interface
!
Subroutine rttov_calcemis_mw_k ( &
     profiles,       & ! in
     profiles_k,     & ! inout
     geometry,       & ! in
     coef,           & ! in
     nfrequencies,   & ! in
     nchannels,      & ! in
     nprofiles,      & ! in
     channels,       & ! in
     polarisations,  & ! in
     lprofiles,      & ! in
     transmission,   & ! in
     transmission_k, & ! inout
     calcemis,       & ! in
     emissivity_k,   & ! inout
     reflectivity_k  ) ! inout
  Use rttov_const, Only :   &
       pi                  ,&
       surftype_sea

  Use rttov_types, Only : &
       rttov_coef     ,&
       profile_Type   ,&
       transmission_Type  ,&
       geometry_Type

  Use parkind1, Only : jpim     ,jprb
  Implicit None

  Integer(Kind=jpim),      Intent(in)    :: nprofiles
  Type(profile_Type),      Intent(in) ,Target   :: profiles(nprofiles)
  Type(geometry_Type),     Intent(in) ,Target   :: geometry(nprofiles)
  Type(rttov_coef),        Intent(in)    :: coef
  Integer(Kind=jpim),      Intent(in)    :: nfrequencies
  Integer(Kind=jpim),      Intent(in)    :: nchannels
  Integer(Kind=jpim),      Intent(in)    :: channels(nfrequencies)
  Integer(Kind=jpim),      Intent(in)    :: polarisations(nchannels,3)
  Integer(Kind=jpim),      Intent(in)    :: lprofiles(nfrequencies)

  Type(transmission_Type), Intent(in):: transmission
  Logical,                 Intent(in)    :: calcemis(nchannels)

  Type(profile_Type),      Intent(inout) ,Target   :: profiles_k(nchannels)
  Type(transmission_Type), Intent(inout) :: transmission_k
  Real(Kind=jprb),         Intent(inout) :: emissivity_k(nchannels)
  Real(Kind=jprb),         Intent(inout) :: reflectivity_k(nchannels)


End Subroutine rttov_calcemis_mw_k
End Interface
