allocate_physio.F90:ALLOCATE(PEK%XEMIS                   (ISIZE              )) 
allocate_teb_veg_pgd.F90:ALLOCATE(PEK%XEMIS                   (KLU)) 
alloc_diag_surf_atmn.F90:ALLOCATE(D%XEMIS  (KSIZE_FULL))
alloc_diag_surf_atmn.F90:D%XEMIS   = XUNDEF
averaged_albedo_emis_isba.F90:      ZEMISF(1:ISIZE) = KK%XEMISF(:)
averaged_albedo_emis_isba.F90:    ZEMIS(1:ISIZE) = PEK%XEMIS(:)
averaged_albedo_emis_isba.F90:      WHERE(PEK%XPSN(:)<1.0.AND.PEK%XEMIS(:)/=XUNDEF)          
averaged_albedo_emis_isba.F90:        ZEMIS(1:ISIZE) = ((1.-KK%XFF(:)-PEK%XPSN(:))*PEK%XEMIS(:) + KK%XFF(:)*KK%XEMISF(:)) /(1.-PEK%XPSN(:))
averaged_albedo_emis_isba.F90:        IF (PEK%XEMIS(JI)/=XUNDEF .AND. ZEMIS_PATCH(IMASK,JP)/=0.) THEN
averaged_tsrad_teb.F90:REAL, DIMENSION(SIZE(T%XEMIS_ROOF)) :: ZDN_ROOF       ! snow fraction 
averaged_tsrad_teb.F90:REAL, DIMENSION(SIZE(T%XEMIS_ROOF)) :: ZDN_ROAD       ! on the surface
averaged_tsrad_teb.F90:ZABS_LW_ROOF(:) = T%XEMIS_ROOF(:) * (ZLW_RAD(:) - XSTEFAN * T%XT_ROOF(:,1)**4)
averaged_tsrad_teb.F90:PEMIS(:) = T%XBLD(:) * (1.-T%XGREENROOF(:)) * (ZDF_ROOF(:)*T%XEMIS_ROOF     (:)    &
averaged_tsrad_teb.F90:              + T%XROAD(:)*T%XSVF_ROAD(:)* (ZDF_ROAD(:)* T%XEMIS_ROAD(:)     &
averaged_tsrad_teb.F90:              + T%XWALL_O_HOR(:)       * T%XSVF_WALL(:)   * T%XEMIS_WALL(:)  &
avg_albedo_emis_teb_veg.F90:USE MODD_SNOW_PAR,   ONLY : XEMISSN
avg_albedo_emis_teb_veg.F90:WHERE (PEK%XEMIS/=XUNDEF)
avg_albedo_emis_teb_veg.F90:  PEMIS(:)   = (1.-PEK%XPSN)*PEK%XEMIS + PEK%XPSN *XEMISSN  
avg_albedo_emis_teb_veg.F90:  WHERE (PEK%XEMIS/=XUNDEF)
avg_urban_fluxes.F90:    PEMIS_TWN(JJ) = T%XBLD       (JJ) * (1.-T%XGREENROOF(JJ)) * PDF_RF(JJ) * T%XEMIS_ROOF(JJ) * (1.-TPN%XFRAC_PANEL(JJ)) &
avg_urban_fluxes.F90:                  + T%XBLD       (JJ)                                   * TPN%XEMIS_PANEL(JJ) *      TPN%XFRAC_PANEL(JJ) &
avg_urban_fluxes.F90:                  + T%XROAD      (JJ) * ( T%XSVF_ROAD(JJ)     * PDF_RD(JJ) * T%XEMIS_ROAD(JJ)                       &
avg_urban_fluxes.F90:                  + T%XWALL_O_HOR(JJ) *    T%XSVF_WALL  (JJ)               * T%XEMIS_WALL(JJ) 
build_emisstabn.F90:! Update %NWS, %NDX, %NTX, %LREAD, %XEMISDATA
build_emisstabn.F90:    ALLOCATE(TPEMISS(JSPEC)%XEMISDATA(KSIZE,INBTS))
build_emisstabn.F90:    CALL READ_SURF_FIELD2D(HPROGRAM,TPEMISS(JSPEC)%XEMISDATA(:,:),YRECFM)
build_emisstabn.F90:    WHERE(TPEMISS(JSPEC)%XEMISDATA(:,:) == 999.)
build_emisstabn.F90:      TPEMISS(JSPEC)%XEMISDATA(:,:) = 0. 
build_emisstabn.F90:    WHERE(TPEMISS(JSPEC)%XEMISDATA(:,:) == 1.E20)
build_emisstabn.F90:      TPEMISS(JSPEC)%XEMISDATA(:,:) = 0. 
build_emisstabn.F90:      TPEMISS(JSPEC)%XEMISDATA(:,ITIME) = TPEMISS(JSPEC)%XEMISDATA(:,ITIME) * PCONVERSION(:)
build_emisstabn.F90:      !TPEMISS(JSPEC)%XEMISDATA(:,ITIME) = TPEMISS(JSPEC)%XEMISDATA(:,ITIME)
build_emisstabn.F90:    ALLOCATE(TPEMISS(JSPEC)%XEMISDATA(KSIZE,IWS_DEFAULT))
build_emisstabn.F90:    TPEMISS(JSPEC)%XFWORK=>TPEMISS(JSPEC)%XEMISDATA(:,1)
ch_aer_emission.F90:ZEMISRADIUSI = XEMISRADIUSI * EXP(-3.*(LOG(XEMISSIGI))**2)
ch_aer_emission.F90:ZEMISRADIUSJ = XEMISRADIUSJ * EXP(-3.*(LOG(XEMISSIGJ))**2)
ch_aer_emission.F90:ZEMISRADIUSI = XEMISRADIUSI
ch_aer_emission.F90:ZEMISRADIUSJ = XEMISRADIUSJ
ch_aer_emission.F90:ZFM(:,1)= ZFM(:,2) / ((ZEMISRADIUSI**3)*EXP(4.5 * (LOG(XEMISSIGI))**2)) 
ch_aer_emission.F90:ZFM(:,4)= ZFM(:,5) / ((ZEMISRADIUSJ**3)*EXP(4.5 * (LOG(XEMISSIGJ))**2)) 
ch_aer_emission.F90:ZFM(:,3) = ZFM(:,1) * (ZEMISRADIUSI**6) *EXP(18 *(LOG(XEMISSIGI))**2)
ch_aer_emission.F90:ZFM(:,6) = ZFM(:,4) * (ZEMISRADIUSJ**6) *EXP(18 *(LOG(XEMISSIGJ))**2)
ch_emission_fluxn.F90:!   Check availability of data within memory Window (XEMISDATA(:,1:IWS))
ch_emission_fluxn.F90:!       File must be read to update XEMISDATA array for this species 
ch_emission_fluxn.F90:            CHE%TSEMISS(JI)%XEMISDATA(:,1:INBTS-CHE%TSEMISS(JI)%NTX+1) = &
ch_emission_fluxn.F90:            CHE%TSEMISS(JI)%XEMISDATA(:,INBTS-CHE%TSEMISS(JI)%NTX+2:IWS) = &
ch_emission_fluxn.F90:            CHE%TSEMISS(JI)%XEMISDATA(:,1:IWS) = ZWORK(:,CHE%TSEMISS(JI)%NPX:INBTS)
ch_emission_fluxn.F90:          CHE%TSEMISS(JI)%XEMISDATA(:,1:IWS) = ZWORK(:,CHE%TSEMISS(JI)%NTX:CHE%TSEMISS(JI)%NTX+IWS-1)
ch_emission_fluxn.F90:    CHE%TSEMISS(JI)%XFWORK(:) = ZALPHA*CHE%TSEMISS(JI)%XEMISDATA(:,INDX2) +&
ch_emission_fluxn.F90:            (1.-ZALPHA)*CHE%TSEMISS(JI)%XEMISDATA(:,INDX1)  
ch_emission_snapn.F90: CHN%XEMIS_FIELDS(:,:)=0.
ch_emission_snapn.F90:        ZE(JI,JT) = ZE(JI,JT) +  CHN%XEMIS_FIELDS_SNAP(JI,JSNAP,JSPEC) &
ch_emission_snapn.F90:  CHN%XEMIS_FIELDS(:,JSPEC) = ZE(:,1) + (ZE(:,2)-ZE(:,1))/3600.*(ZTIME0(:)-IHOUR(:,1)*3600.)
ch_emission_to_atmn.F90:            CURPRONOS%XCOEFF(JSPEC)*CHN%XEMIS_FIELDS(:,CURPRONOS%NEFINDEX(JSPEC))
ch_init_emissionn.F90:  ALLOCATE(CHE%XEMIS_FIELDS(KLU,CHE%NEMIS_NBR))
ch_init_emissionn.F90:    CHE%XEMIS_FIELDS(:,IIND1:IIND2) = ZWORK2D(:,:)
ch_init_snapn.F90:ALLOCATE(CHN%XEMIS_FIELDS_SNAP(KLU,CHN%NEMIS_SNAP,CHN%NEMIS_NBR))
ch_init_snapn.F90:ALLOCATE(CHN%XEMIS_FIELDS     (KLU,           CHN%NEMIS_NBR))
ch_init_snapn.F90:    CALL READ_SURF(HPROGRAM,YRECFM,CHN%XEMIS_FIELDS_SNAP(:,JSNAP,JSPEC),IRESP,YCOMMENT)
compute_isba_parameters.F90:USE MODD_SNOW_PAR,       ONLY : XEMISSN
compute_isba_parameters.F90:  ALLOCATE(KK%XEMISF  (PK%NSIZE_P)) 
compute_isba_parameters.F90:  KK%XEMISF        = 0.0  
compute_isba_parameters.F90:ALLOCATE(S%XEMIS_NAT   (KI))
compute_isba_parameters.F90:S%XEMIS_NAT (:) = XUNDEF
compute_isba_parameters.F90:                                S%XEMIS_NAT, ZTSRAD_NAT, ZTSURF_NAT        )  
compute_isba_parameters.F90:PEMIS  = S%XEMIS_NAT
convert_patch_isba.F90:                      PEK%XEMIS ,DTV%XPAR_VEGTYPE,DTV%XPAR_EMIS(:,KDEC2,:),YNAT,'ARI',&
convert_patch_isba.F90:    CALL AV_PGD_1P(DTCO, PEK%XEMIS ,PCOVER ,XDATA_EMIS_ECO (:,KDEC,:),YNAT,'ARI',OCOVER,&
convert_patch_teb.F90:    T%XEMIS_ROOF=DTT%XPAR_EMIS_ROOF
convert_patch_teb.F90:    CALL INI_DATA_PARAM_TEB(BDD, DTT%NPAR_BLDCODE,PEMIS_ROOF=T%XEMIS_ROOF)
convert_patch_teb.F90:    CALL AV_PGD(DTCO, T%XEMIS_ROOF ,TOP%XCOVER ,XDATA_EMIS_ROOF (:),YAREA,YAVG,TOP%LCOVER)  
convert_patch_teb.F90:    T%XEMIS_ROAD=DTT%XPAR_EMIS_ROAD
convert_patch_teb.F90:    CALL INI_DATA_PARAM_TEB(BDD, DTT%NPAR_BLDCODE,PEMIS_ROAD=T%XEMIS_ROAD)
convert_patch_teb.F90:                 T%XEMIS_ROAD ,TOP%XCOVER ,XDATA_EMIS_ROAD (:),'STR','ARI',TOP%LCOVER)  
convert_patch_teb.F90:    T%XEMIS_WALL=DTT%XPAR_EMIS_WALL
convert_patch_teb.F90:    CALL INI_DATA_PARAM_TEB(BDD, DTT%NPAR_BLDCODE,PEMIS_WALL=T%XEMIS_WALL)
convert_patch_teb.F90:    CALL AV_PGD(DTCO, T%XEMIS_WALL ,TOP%XCOVER ,XDATA_EMIS_WALL (:),YAREA,YAVG,TOP%LCOVER)  
convert_patch_teb.F90:    TPN%XEMIS_PANEL=DTT%XPAR_EMIS_PANEL
convert_patch_teb.F90:    CALL INI_DATA_PARAM_TEB(BDD, DTT%NPAR_BLDCODE,PEMIS_PANEL=TPN%XEMIS_PANEL)
convert_patch_teb.F90:    CALL AV_PGD(DTCO, TPN%XEMIS_PANEL ,TOP%XCOVER ,XDATA_EMIS_PANEL(:),'BLD','ARI',TOP%LCOVER)
coupling_flaken.F90:                DST%XEMISSIG_DST, DST%XEMISRADIUS_DST, JPMODE_DST, XDENSITY_DST, &
coupling_flaken.F90:    DST%XEMISRADIUS_DST,                &!I [um] emitted radius for the modes (max 3)
coupling_flaken.F90:    DST%XEMISSIG_DST,                   &!I [-] emitted sigma for the different modes (max 3)
coupling_flaken.F90:                SLT%XEMISSIG_SLT, SLT%XEMISRADIUS_SLT, JPMODE_SLT, XDENSITY_SLT, &
coupling_flaken.F90:    SLT%XEMISRADIUS_SLT,                &!I [um] emitted radius for the modes (max 3)
coupling_flaken.F90:    SLT%XEMISSIG_SLT,                   &!I [-] emitted sigma for the different modes (max 3)
coupling_ideal_flux.F90:                            CUSTARTYPE, XUSTAR, XZ0, XALB, XEMIS, XTSRAD, &
coupling_ideal_flux.F90:PEMIS    = XEMIS
coupling_isban.F90:                  ZTRAD_TILE, PDIR_ALB, PSCA_ALB, S%XEMIS_NAT, S%XTSRAD_NAT  )  
coupling_isban.F90:PEMIS = S%XEMIS_NAT
coupling_isban.F90:                ZP_TA, ZP_RHOA, DSTK%XEMISSIG_DST, DSTK%XEMISRADIUS_DST, JPMODE_DST,  &
coupling_isban.F90:    DSTK%XEMISRADIUS_DST,              & !I [um] emitted radius for the modes (max 3)
coupling_isban.F90:    DSTK%XEMISSIG_DST,                 & !I [-] emitted sigma for the different modes (max 3)
coupling_isban.F90:                ZP_TA, ZP_RHOA, SLT%XEMISSIG_SLT, SLT%XEMISRADIUS_SLT, JPMODE_SLT,     &
coupling_isban.F90:    SLT%XEMISRADIUS_SLT,              & !I [um] emitted radius for the modes (max 3)
coupling_isban.F90:    SLT%XEMISSIG_SLT,                 & !I [-] emitted sigma for the different modes (max 3)
coupling_isba_orographyn.F90:          + XSTEFAN*S%XEMIS_NAT(:)*S%XTSRAD_NAT(:)**4 * (1.-Z3D_TOT_SURF_INV(:))  
coupling_seafluxn.F90:USE MODD_WATER_PAR,  ONLY : XEMISWAT, XEMISWATICE
coupling_seafluxn.F90:ZEMIS(:) =   (1 - S%XSIC(:)) * XEMISWAT    + S%XSIC(:) * XEMISWATICE
coupling_seafluxn.F90:ZTRAD(:) = (((1 - S%XSIC(:)) * XEMISWAT    * S%XSST (:)**4 + &
coupling_seafluxn.F90:             S%XSIC(:)  * XEMISWATICE * S%XTICE(:)**4)/ ZEMIS(:)) ** 0.25
coupling_seafluxn.F90:ZEMIS(:) = S%XEMIS(:)
coupling_seafluxn.F90:                PRHOA, DST%XEMISSIG_DST, DST%XEMISRADIUS_DST, JPMODE_DST,     &
coupling_seafluxn.F90:                DST%XEMISRADIUS_DST,                &!I [um] emitted radius for the modes (max 3)
coupling_seafluxn.F90:                DST%XEMISSIG_DST,                   &!I [-] emitted sigma for the different modes (max 3)
coupling_seafluxn.F90:                PRHOA, SLT%XEMISSIG_SLT, SLT%XEMISRADIUS_SLT, JPMODE_SLT,     &
coupling_seafluxn.F90:                SLT%XEMISRADIUS_SLT,            &!I [um] emitted radius for the modes (max 3)
coupling_seafluxn.F90:                SLT%XEMISSIG_SLT,               &!I [-] emitted sigma for the different modes (max 3)
coupling_sltn.F90:    PSFSLT(:,2+(JN-1)*3) = PSFSLT(:,1+(JN-1)*3) * (SLT%XEMISRADIUS_SLT(JN)**3)*EXP(4.5 * LOG(SLT%XEMISSIG_SLT(JN))**2)  
coupling_sltn.F90:    PSFSLT(:,3+(JN-1)*3) = PSFSLT(:,1+(JN-1)*3) * (SLT%XEMISRADIUS_SLT(JN)**6)*EXP(18. * LOG(SLT%XEMISSIG_SLT(JN))**2)  
coupling_sltn.F90:    PSFSLT(:,JN) =  ZSFSLT_MDE(:,JORDER_SLT(JN)) * (SLT%XEMISRADIUS_SLT(JN)**3)*EXP(4.5 * LOG(SLT%XEMISSIG_SLT(JN))**2) 
coupling_sltn.F90:    PSFSLT(:,2+(JN-1)*2) = PSFSLT(:,1+(JN-1)*2) * (SLT%XEMISRADIUS_SLT(JN)**3)*EXP(4.5 * LOG(SLT%XEMISSIG_SLT(JN))**2) 
coupling_tebn.F90:                DST%XEMISSIG_DST, DST%XEMISRADIUS_DST, JPMODE_DST, XDENSITY_DST, &
coupling_tebn.F90:    DST%XEMISRADIUS_DST,                &!I [um] emitted radius for the modes (max 3)
coupling_tebn.F90:    DST%XEMISSIG_DST,                   &!I [-] emitted sigma for the different modes (max 3)
coupling_tebn.F90:                SLT%XEMISSIG_SLT, SLT%XEMISRADIUS_SLT, JPMODE_SLT, XDENSITY_SLT, &
coupling_tebn.F90:    SLT%XEMISRADIUS_SLT,                &!I [um] emitted radius for the modes (max 3)
coupling_tebn.F90:    SLT%XEMISSIG_SLT,                   &!I [-] emitted sigma for the different modes (max 3)
coupling_watfluxn.F90:ZEMIS  = W%XEMIS
coupling_watfluxn.F90:                DST%XEMISSIG_DST, DST%XEMISRADIUS_DST, JPMODE_DST, XDENSITY_DST, &
coupling_watfluxn.F90:    DST%XEMISRADIUS_DST,                &!I [um] emitted radius for the modes (max 3)
coupling_watfluxn.F90:    DST%XEMISSIG_DST,                   &!I [-] emitted sigma for the different modes (max 3)
coupling_watfluxn.F90:                SLT%XEMISSIG_SLT, SLT%XEMISRADIUS_SLT, JPMODE_SLT, XDENSITY_SLT, &
coupling_watfluxn.F90:    SLT%XEMISRADIUS_SLT,                &!I [um] emitted radius for the modes (max 3)
coupling_watfluxn.F90:    SLT%XEMISSIG_SLT,                   &!I [-] emitted sigma for the different modes (max 3)
dealloc_diag_surf_atmn.F90:DEALLOCATE(D%XEMIS   )
diag_cpl_esm_sea.F90:USE MODD_WATER_PAR, ONLY : XEMISWATICE
diag_cpl_esm_sea.F90:    S%XCPL_SEAICE_HEAT(:) = S%XCPL_SEAICE_HEAT(:) + PTSTEP * ( XEMISWATICE*(PLW(:)-XSTEFAN*ZTICE4(:)) &
diag_cpl_esm_water.F90:USE MODD_WATER_PAR, ONLY : XEMISWATICE
diag_cpl_esm_water.F90:  W%XCPL_WATERICE_HEAT(:) = W%XCPL_WATERICE_HEAT(:) + PTSTEP * ( XEMISWATICE*(PLW(:)-XSTEFAN*ZTICE4(:)) &
diag_inline_surf_atmn.F90:D%XEMIS = PEMIS
diag_surf_budget_sea.F90:USE MODD_WATER_PAR,      ONLY : XEMISWATICE, XALBSEAICE
diag_surf_budget_sea.F90:  DI%XLWU(:)=XEMISWATICE*XSTEFAN*S%XTICE(:)**4 + (1.-XEMISWATICE)*PLW(:)
e_budget.F90:USE MODD_SNOW_PAR,   ONLY : XEMISSN, XEMCRIN
e_budget.F90:     PEMIST(:) = PEK%XEMIS(:)
e_budget.F90:     PEMIST(:) = ((1.-KK%XFF(:)-PEK%XPSN(:))*PEK%XEMIS(:)         + KK%XFF(:)*KK%XEMISF(:))/(1.-PEK%XPSN(:))
e_budget.F90:     PEMIST(:) = PEK%XEMIS(:)
e_budget.F90:      PEMIST(:) = PEK%XEMIS(:)-PEK%XPSN(:)*(PEK%XEMIS(:)-XEMCRIN)
e_budget.F90:      PEMIST(:) = ( 1.-PEK%XPSN(:)-KK%XFF(:))* PEK%XEMIS(:) + &
e_budget.F90:                       PEK%XPSN(:)           * XEMISSN      + KK%XFF(:)*KK%XEMISF(:)
emis_from_veg.F90:USE MODD_ISBA_PAR,       ONLY : XEMISSOIL, XEMISVEG
emis_from_veg.F90:USE MODD_SNOW_PAR,       ONLY : XEMISSN
emis_from_veg.F90:ZEMISSOIL =   XEMISSN   *     PVEGTYPE(NVT_SNOW) &
emis_from_veg.F90:              + XEMISSOIL * (1.-PVEGTYPE(NVT_SNOW))  
emis_from_veg.F90:PEMIS   =   XEMISVEG  *     PVEG     &
emis_from_veg.F90:USE MODD_ISBA_PAR,       ONLY : XEMISSOIL, XEMISVEG
emis_from_veg.F90:USE MODD_SNOW_PAR,       ONLY : XEMISSN
emis_from_veg.F90:ZEMISSOIL(:) =   XEMISSN   *     PVEGTYPE(:,NVT_SNOW) &
emis_from_veg.F90:                + XEMISSOIL * (1.-PVEGTYPE(:,NVT_SNOW))  
emis_from_veg.F90:PEMIS(:)   =   XEMISVEG  *     PVEG(:)     &
emis_from_veg.F90:USE MODD_ISBA_PAR,       ONLY : XEMISSOIL, XEMISVEG
emis_from_veg.F90:USE MODD_SNOW_PAR,       ONLY : XEMISSN
emis_from_veg.F90:ZEMISSOIL(:,:) =   XEMISSN   *     PVEGTYPE(:,:,NVT_SNOW) &
emis_from_veg.F90:                   + XEMISSOIL * (1.-PVEGTYPE(:,:,NVT_SNOW))  
emis_from_veg.F90:PEMIS(:,:)   =   XEMISVEG  *     PVEG(:,:)     &
emis_from_veg.F90:USE MODD_ISBA_PAR,       ONLY : XEMISSOIL, XEMISVEG
emis_from_veg.F90:USE MODD_SNOW_PAR,       ONLY : XEMISSN
emis_from_veg.F90:      PEMIS(JJ) = XEMISVEG * PVEG(JJ) + XEMISSOIL * (1.-PVEG(JJ))  
emis_from_veg.F90:      PEMIS(JJ) = XEMISSN
flake_interface.F90:   Q_w_flk = F%XEMIS(JL)*Q_atm_lw_in(JL) - sfcflx_lwradwsfc(F%XEMIS(JL),F%XTS(JL))
ini_surf_csts.F90:USE MODD_SNOW_PAR,  ONLY : XEMISSN, XANSMIN, XANSMAX,          &
ini_surf_csts.F90:NAMELIST/NAM_SURF_CSTS/ XEMISSN, XANSMIN, XANSMAX, XAGLAMIN, XAGLAMAX, &
ini_surf_csts.F90:                        XALBWAT, XALBCOEF_TA96, XALBSCA_WAT, XEMISWAT, &
ini_surf_csts.F90:                        XALBWATICE, XEMISWATICE, XHGLA, XWSNV, XCFFV,  &
ini_surf_csts.F90:XEMISWAT    = XUNDEF
ini_surf_csts.F90:XEMISWATICE = XUNDEF
ini_surf_csts.F90:XEMISSN     = XUNDEF
ini_surf_csts.F90:IF(XEMISWAT==XUNDEF)THEN
ini_surf_csts.F90:    XEMISWAT =  0.98
ini_surf_csts.F90:    XEMISWAT =  0.96
ini_surf_csts.F90:IF(XEMISWATICE==XUNDEF)THEN
ini_surf_csts.F90:    XEMISWATICE =  1.0
ini_surf_csts.F90:    XEMISWATICE =  0.97
ini_surf_csts.F90:IF(XEMISSN==XUNDEF)THEN
ini_surf_csts.F90:    XEMISSN =  1.0
ini_surf_csts.F90:    XEMISSN =  0.99
init_dst.F90:ALLOCATE(DSTK%XEMISRADIUS_DST(NDSTMDE))
init_dst.F90:ALLOCATE(DSTK%XEMISSIG_DST   (NDSTMDE))
init_dst.F90:  XEMISRADIUS_INI_DST(:) = 0.5d6 * (/ 0.0111e-6, 2.524e-6, 42.10e-6 /)  ! [um]  Mass median radius She84 p. 75 Table 1
init_dst.F90:  XEMISSIG_INI_DST   (:) = (/ 1.89 , 2.0  , 2.13 /)             ! [frc] Geometric standard deviation She84 p. 75 Table 1
init_dst.F90:  XEMISRADIUS_INI_DST(:) = 0.5d6 * (/0.27e-6  ,  5.6e-6  ,  57.6e-6 /) ! [um] Mass median radius PaG77 p. 2080 Table 1 
init_dst.F90:  XEMISSIG_INI_DST   (:) = (/ 1.88, 2.2  , 1.62 /)              ! [frc] Geometric standard deviation PaG77 p. 2080 Table 1
init_dst.F90:  XEMISRADIUS_INI_DST(:) = 0.5d6 * (/ 0.832e-6 ,  4.82e-6 , 19.38e-6 /) ! [um] Mass median radius BSM96 p. 73 Table 2
init_dst.F90:  XEMISSIG_INI_DST   (:) = (/ 2.10, 1.90 , 1.60 /)              ! [frc] Geometric standard deviation BSM96 p. 73 Table 2
init_dst.F90:  XEMISRADIUS_INI_DST(:) = 0.5*(/ 1.5, 6.7, 14.2 /)      ! [um] Mass median radius BSM96 p. 73 Table 2
init_dst.F90:  XEMISSIG_INI_DST   (:) = (/1.70, 1.60, 1.50/)          ! [frc] Geometric standard deviation BSM96 p. 73 Table 2
init_dst.F90:  XEMISRADIUS_INI_DST(:) = 0.5*(/ 0.078, 0.641, 5.00 /)  ! [um] Number median radius 
init_dst.F90:  XEMISSIG_INI_DST   (:) = (/ 1.75,  1.76, 1.70/)        ! [frc] Geometric standard deviation 
init_dst.F90:  XEMISRADIUS_INI_DST(:) = 0.5*(/ 0.078, 0.641, 5.00 /)  ! [um] Number median radius 
init_dst.F90:  XEMISSIG_INI_DST   (:) = (/  1.75,   1.76, 1.70   /)   ! [frc] Geometric standard deviation   
init_dst.F90:  DSTK%XEMISSIG_DST   (JMODE) = XEMISSIG_INI_DST(JMODE_IDX)
init_dst.F90:  DSTK%XEMISRADIUS_DST(JMODE) = XEMISRADIUS_INI_DST(JMODE_IDX)
init_dst.F90:    DSTK%XEMISRADIUS_DST(JMODE) = DSTK%XEMISRADIUS_DST(JMODE) * EXP(-3.d0 * (LOG(DSTK%XEMISSIG_DST(JMODE)))**2)  
init_flaken.F90:ALLOCATE(FM%F%XEMIS    (ILU))
init_flaken.F90:FM%F%XEMIS    = 0.0
init_from_data_teb_vegn.F90:  PEK%XEMIS(:) =  DTV%XPAR_EMIS (:,ITIME,1)
init_ideal_flux.F90:USE MODD_IDEAL_FLUX, ONLY : XSFTS, XALB, XEMIS
init_ideal_flux.F90:PEMIS    = XEMIS
init_seafluxn.F90:ALLOCATE(SM%S%XEMIS    (ILU))
init_seafluxn.F90:SM%S%XEMIS    = 0.0
init_slt.F90:ALLOCATE(SLT%XEMISRADIUS_SLT(NSLTMDE))
init_slt.F90:ALLOCATE(SLT%XEMISSIG_SLT   (NSLTMDE))
init_slt.F90:  XEMISRADIUS_INI_SLT(:) = (/ 0.2, 2.0, 12.  /)  ! [um]  Number median radius She84 p. 75 Table 1
init_slt.F90:  XEMISSIG_INI_SLT   (:) = (/ 1.9, 2.0, 3.00 /)  ! [frc] Geometric standard deviation She84 p. 75 Table 1
init_slt.F90:  XEMISRADIUS_INI_SLT(:) = 0.5*(/0.28, 2.25, 15.32/) ! [um] Mass median radius
init_slt.F90:  XEMISSIG_INI_SLT   (:) =     (/1.59, 2.00, 2.00 /) ! [frc] Geometric standard deviation
init_slt.F90:  SLT%XEMISSIG_SLT   (JMODE) = XEMISSIG_INI_SLT   (JMODE_IDX)
init_slt.F90:  SLT%XEMISRADIUS_SLT(JMODE) = XEMISRADIUS_INI_SLT(JMODE_IDX)
init_slt.F90:    SLT%XEMISRADIUS_SLT(JMODE) = SLT%XEMISRADIUS_SLT(JMODE) * EXP(-3.d0 * (LOG(SLT%XEMISSIG_SLT(JMODE)))**2)    
init_teb_gardenn.F90:ALLOCATE(K%XEMISF  (KI))
init_teb_gardenn.F90:K%XEMISF   = 0.0
init_teb_greenroofn.F90:ALLOCATE(K%XEMISF  (KI))
init_teb_greenroofn.F90:K%XEMISF   = 0.0
init_tebn.F90:USE MODD_SNOW_PAR, ONLY : XEMISSN
init_tebn.F90:  ALLOCATE(NT%AL(JP)%XEMIS_ROOF   (ILU))
init_tebn.F90:  ALLOCATE(NT%AL(JP)%XEMIS_ROAD   (ILU))
init_tebn.F90:  ALLOCATE(NT%AL(JP)%XEMIS_WALL   (ILU))
init_tebn.F90:  ALLOCATE(TPN%XEMIS_PANEL    (ILU))
init_tebn.F90:  CALL INIT_SNOW_LW(XEMISSN,NT%AL(JP)%TSNOW_ROOF)
init_tebn.F90:  CALL INIT_SNOW_LW(XEMISSN,NT%AL(JP)%TSNOW_ROAD)
init_vegn.F90:USE MODD_SNOW_PAR,       ONLY : XEMISSN
init_vegn.F90: CALL INIT_SNOW_LW(XEMISSN,PEK%TSNOW)
init_vegn.F90:        PEK%XEMIS(JI) = EMIS_FROM_VEG(PEK%XVEG(JI),PK%XVEGTYPE_PATCH(JI,:))
init_veg_pgdn.F90:USE MODD_SNOW_PAR,       ONLY : XEMISSN
init_watfluxn.F90:ALLOCATE(WM%W%XEMIS    (ILU))
init_watfluxn.F90:WM%W%XEMIS    = 0.0
isba_emis_meb.F90:USE MODD_ISBA_PAR,       ONLY : XEMISSOIL, XEMISVEG
isba_emis_meb.F90:ZEMISG(:)     = ZSIGMA_FA(:)*XEMISVEG + (1.0-ZSIGMA_FA(:))*XEMISSOIL
isba_emis_meb.F90:ZEMISN(:)     = ZSIGMA_FA(:)*XEMISVEG + (1.0-ZSIGMA_FA(:))*PEMIS_N(:)
isba_fluxes_meb.F90:USE MODD_ISBA_PAR,       ONLY : XEMISSOIL, XEMISVEG
isba_lwnet_meb.F90:USE MODD_ISBA_PAR,       ONLY : XEMISSOIL, XEMISVEG
isba_lwnet_meb.F90:ZEMIS_G(:)    = XEMISSOIL*(1.-PFF(:)) + PFF(:)*PEMIS_F(:)
isba_lwnet_meb.F90:PLW_B(:)      = PLW_A(:)*    PSIGMA_F(:)    *(1.-XEMISVEG)
isba_lwnet_meb.F90:PLW_F(:)      =                PSIGMA_FA(:) *    XEMISVEG * PFRAC(:) *XSTEFAN*(PTV(:)**4)
isba_lwnet_meb.F90:ZWORK(:)      = (1.-XEMISVEG)*PSIGMA_FA(:)
isba_meb.F90:CALL ISBA_LWNET_MEB(PEK%XLAI, PEK%XPSN, PPALPHAN,PEK%TSNOW%EMIS, KK%XEMISF, KK%XFF,          &
isba_properties.F90:USE MODD_SNOW_PAR   , ONLY : XEMISSN, XEMCRIN, XSNOWDMIN, &
isba_properties.F90:USE MODD_WATER_PAR  , ONLY : XEMISWAT
isba_properties.F90:  PENOSNOW(:) = PEK%XEMIS(:)
isba_properties.F90:    PENOSNOW(:) = PEK%XEMIS(:)
isba_properties.F90:    PESNOW  (:) = XEMISSN
isba_properties.F90:    PENOSNOW(:) = PEK%XEMIS(:)
isba_snow_frac.F90:USE MODD_SNOW_PAR   , ONLY : XEMISSN, XEMCRIN, XSNOWDMIN, &
modd_ch_emis_fieldn.F90:  REAL,              DIMENSION(:,:), POINTER:: XEMIS_FIELDS ! emission pgd fields values
modd_ch_emis_fieldn.F90:  NULLIFY(YCH_EMIS_FIELD%XEMIS_FIELDS)
modd_chs_aerosol.F90:REAL         :: XEMISRADIUSI  = 0.036   ! mean radius of primary aerosol
modd_chs_aerosol.F90:REAL         :: XEMISRADIUSJ  = 0.385    ! mean radius of primary aerosol
modd_chs_aerosol.F90:REAL         :: XEMISSIGI     = 1.86   ! dispersion of primary aerosol
modd_chs_aerosol.F90:REAL         :: XEMISSIGJ     = 1.29   ! dispersion of primary aerosol
modd_ch_snapn.F90:  REAL,     DIMENSION(:,:,:), POINTER:: XEMIS_FIELDS_SNAP ! Emission factor for
modd_ch_snapn.F90:  REAL,     DIMENSION(:,:),   POINTER:: XEMIS_FIELDS      ! Emission for each specie
modd_ch_snapn.F90:  NULLIFY(YCH_EMIS_SNAP%XEMIS_FIELDS)
modd_ch_snapn.F90:  NULLIFY(YCH_EMIS_SNAP%XEMIS_FIELDS_SNAP)
modd_diagn.F90:  REAL, POINTER, DIMENSION(:)   :: XEMIS   ! surface emissivity at t          (-)
modd_diagn.F90:  NULLIFY(D%XEMIS)
modd_dstn.F90:  REAL,DIMENSION(:), POINTER   :: XEMISRADIUS_DST         !Number median radius for each source mode
modd_dstn.F90:  REAL,DIMENSION(:), POINTER   :: XEMISSIG_DST            !sigma for each source mode
modd_dstn.F90:  NULLIFY(YDST%XEMISRADIUS_DST)
modd_dstn.F90:  NULLIFY(YDST%XEMISSIG_DST)
modd_dst_surf.F90:REAL,DIMENSION(NEMISMODES_MAX)   :: XEMISRADIUS_INI_DST          ! number madian radius initialization for sea salt mode (um)
modd_dst_surf.F90:REAL,DIMENSION(NEMISMODES_MAX)   :: XEMISSIG_INI_DST             ! dispersion initialization for sea salt mode
modd_emis_gr_fieldn.F90:  REAL,          DIMENSION(:,:,:), POINTER:: XEMIS_GR_FIELDS ! emission pgd fields values
modd_emis_gr_fieldn.F90:  NULLIFY(YEMIS_GR_FIELD%XEMIS_GR_FIELDS)
modd_flaken.F90:  REAL, POINTER, DIMENSION(:) :: XEMIS     ! water surface emissivity (NOT USED BY FLAKE)
modd_flaken.F90:  NULLIFY(YFLAKE%XEMIS)
modd_forc_atm.F90:REAL,             DIMENSION(:),  ALLOCATABLE :: XEMIS     ! emissivity
modd_ideal_flux.F90:REAL                              :: XEMIS      ! emissivity (-)
modd_isban.F90:REAL, POINTER, DIMENSION(:)   :: XEMIS_NAT         ! patch averaged emissivity               (-)
modd_isban.F90:REAL, POINTER, DIMENSION(:) :: XEMISF      ! Flood emissivity
modd_isban.F90:REAL, POINTER, DIMENSION(:) :: XEMIS         ! surface emissivity                      (-)
modd_isban.F90:NULLIFY(YISBA_S%XEMIS_NAT)
modd_isban.F90:NULLIFY(YISBA_K%XEMISF)
modd_isban.F90:NULLIFY(YISBA_PE%XEMIS)
modd_isba_par.F90:REAL, PARAMETER       :: XEMISVEG = 0.97
modd_isba_par.F90:REAL, PARAMETER       :: XEMISSOIL = 0.94
modd_seafluxn.F90:  REAL, POINTER, DIMENSION(:) :: XEMIS   ! emissivity
modd_seafluxn.F90:  NULLIFY(YSEAFLUX%XEMIS)
modd_sltn.F90:  REAL,DIMENSION(:), POINTER     :: XEMISRADIUS_SLT             ! Number median radius for each source mode
modd_sltn.F90:  REAL,DIMENSION(:), POINTER     :: XEMISSIG_SLT                ! sigma for each source mode
modd_sltn.F90:  NULLIFY(YSLT%XEMISRADIUS_SLT)
modd_sltn.F90:  NULLIFY(YSLT%XEMISSIG_SLT)
modd_slt_surf.F90:REAL,DIMENSION(NEMISMODES_MAX)   :: XEMISRADIUS_INI_SLT          ! number madian radius initialization for sea salt mode (um)
modd_slt_surf.F90:REAL,DIMENSION(NEMISMODES_MAX)   :: XEMISSIG_INI_SLT             ! dispersion initialization for sea salt mode
modd_snow_par.F90:REAL, SAVE       :: XEMISSN
modd_tebn.F90:  REAL, POINTER, DIMENSION(:)   :: XEMIS_ROOF    ! roof emissivity                  (-)
modd_tebn.F90:  REAL, POINTER, DIMENSION(:)   :: XEMIS_ROAD    ! road emissivity                  (-)
modd_tebn.F90:  REAL, POINTER, DIMENSION(:)   :: XEMIS_WALL    ! wall emissivity                  (-)
modd_tebn.F90:  NULLIFY(YTEB%XEMIS_ROOF)
modd_tebn.F90:  NULLIFY(YTEB%XEMIS_ROAD)
modd_tebn.F90:  NULLIFY(YTEB%XEMIS_WALL)
modd_teb_paneln.F90:  REAL,    POINTER, DIMENSION(:) :: XEMIS_PANEL       ! emissivity of solar panels               (-)
modd_teb_paneln.F90:  NULLIFY(YTEB_PANEL%XEMIS_PANEL)
modd_type_efutil.F90:  INTEGER                       :: NDX       ! Current index on array XEMISDATA
modd_type_efutil.F90:  REAL,DIMENSION(:,:), POINTER  :: XEMISDATA ! Emission data array
modd_water_par.F90:REAL, SAVE       :: XEMISWAT
modd_water_par.F90:REAL, SAVE       :: XEMISWATICE 
modd_watfluxn.F90:  REAL, POINTER, DIMENSION(:) :: XEMIS     ! water surface emissivity                (-)
modd_watfluxn.F90:  NULLIFY(YWATFLUX%XEMIS)
mode_aer_surf.F90:            * exp(-(3./2.)*log(XEMISSIGI)**2))**6 &
mode_aer_surf.F90:            * exp(18.*log(XEMISSIGI)**2) 
mode_aer_surf.F90:  IF(PRESENT(PSIG1D)) PSIG1D(:,1) = XEMISSIGI
mode_aer_surf.F90:            * exp(-(3./2.)*log(XEMISSIGJ)**2))**6 &
mode_aer_surf.F90:            * exp(18.*log(XEMISSIGJ)**2)  
mode_aer_surf.F90:  IF(PRESENT(PSIG1D)) PSIG1D(:,2) = XEMISSIGJ
mode_teb_veg.F90:  PEK%XEMIS(:)=0.94
modn_chs_orilam.F90:USE MODD_CHS_AEROSOL, ONLY: LCH_AERO_FLUX, XEMISSIGI, XEMISSIGJ,  &
modn_chs_orilam.F90:                              XEMISRADIUSI, XEMISRADIUSJ, CRGUNIT,&
modn_chs_orilam.F90:NAMELIST /NAM_CHS_ORILAM/   LCH_AERO_FLUX, XEMISSIGI, XEMISSIGJ,   &
modn_chs_orilam.F90:                              XEMISRADIUSI, XEMISRADIUSJ,  CRGUNIT,&
modn_ideal_flux.F90:                            XEMIS, XTSRAD_t=>XTSRAD, XTIMEF_f=>XTIMEF, XTIMET_t=>XTIMET   
modn_ideal_flux.F90:                        CUSTARTYPE, XUSTAR, XZ0, XALB, XEMIS, XTSRAD
pgd_chemistry.F90:ALLOCATE(CHE%XEMIS_FIELDS (NL,CHE%NEMIS_NBR))
pgd_chemistry.F90:      CHE%XEMIS_FIELDS(:,JNBR) = (U%XNATURE(:)+U%XTOWN(:))*ZEMIS_FIELDS(:) 
pgd_chemistry.F90:      CHE%XEMIS_FIELDS(:,JNBR) = U%XSEA*ZEMIS_FIELDS(:)
pgd_chemistry.F90:      CHE%XEMIS_FIELDS(:,JNBR) = ZEMIS_FIELDS(:)
pgd_chemistry_snap.F90:ALLOCATE(CHN%XEMIS_FIELDS_SNAP(NL,NEMIS_SNAP,NEMIS_NBR))
pgd_chemistry_snap.F90:                   CHN%XEMIS_FIELDS_SNAP(:,JSNAP,JSPEC)                         )
prep_isba.F90:USE MODD_SNOW_PAR,    ONLY : XEMISSN
prep_isba.F90:    CALL INIT_SNOW_LW(XEMISSN,NPE%AL(JP)%TSNOW)
preps_for_meb_ebud_rad.F90:USE MODD_SNOW_PAR,            ONLY : XRHOSMAX_ES, XRHOSMIN_ES, XEMISSN, XSNOWDMIN, &
preps_for_meb_ebud_rad.F90:PEMISNOW(:)       = XEMISSN
read_namelists_ideal.F90:                            CUSTARTYPE, XUSTAR, XZ0, XALB, XEMIS, XTSRAD
read_namelists_ideal.F90:                        CUSTARTYPE, XUSTAR, XZ0, XALB, XEMIS, XTSRAD)
road_layer_e_budget.F90:                      (1 - T%XEMIS_ROAD(JJ))/T%XEMIS_ROAD(JJ) * PABS_LW_ROAD(JJ)
roof_layer_e_budget.F90:                        + XSTEFAN * T%XEMIS_ROOF(JJ) * 4.*ZTS_ROOF(JJ)**3                  &
roof_layer_e_budget.F90:                        + T%XEMIS_ROOF(JJ)*PLW_RAD(JJ)                                                   &                 
roof_layer_e_budget.F90:                        + XSTEFAN * T%XEMIS_ROOF(JJ) * ZTS_ROOF(JJ)**4 * ( 3.*ZIMPL-ZEXPL )              &
roof_layer_e_budget.F90:  PABS_LW_ROOF(JJ) = T%XEMIS_ROOF(JJ) * (PLW_RAD(JJ) - XSTEFAN * ZTRAD_ROOF(JJ)** 4)
snow3l.F90:USE MODD_SNOW_PAR, ONLY : X_RI_MAX, XEMISSN
snow3l.F90:PEMIST(:) = XEMISSN
snow3L_isba.F90:USE MODD_SNOW_PAR,   ONLY : XRHOSMAX_ES, XSNOWDMIN, XRHOSMIN_ES, XEMISSN
snow3L_isba.F90:  PEK%TSNOW%EMIS(:) = XEMISSN    
snow_cover_1layer.F90:USE MODD_SNOW_PAR,   ONLY : XEMISSN
snow_cover_1layer.F90:      TPSNOW%EMIS (JJ) = XEMISSN
snowcro.F90:USE MODD_SNOW_PAR, ONLY : X_RI_MAX, XEMISSN
snowcro.F90:PEMIST(:) = XEMISSN
solar_panel.F90:  ZLWU_PANEL  (:) =       TPN%XEMIS_PANEL(:)  * XSTEFAN * ZTS_PANEL(:)**4 &
solar_panel.F90:                    + (1.-TPN%XEMIS_PANEL(:)) * PLW_RAD(:)
teb.F90:USE MODD_SNOW_PAR,     ONLY : XEMISSN, XANSMAX_ROOF, &
teb_garden.F90:USE MODD_SNOW_PAR,          ONLY: XEMISSN, XANSMAX
teb_garden.F90:  T%TSNOW_ROAD%EMIS(:) = XEMISSN
teb_garden.F90:  T%TSNOW_ROOF%EMIS(:) = XEMISSN
update_esm_isban.F90:    ZEMIS (IMASK,JP) = PEK%XEMIS(JI)
update_esm_isban.F90:      IF (PEK%XPSN(JI)<1.0.AND.PEK%XEMIS(JI)/=XUNDEF) THEN
update_esm_isban.F90:        ZEMIS(IMASK,JP) = ((1.-KK%XFF(JI)-PEK%XPSN(JI))*PEK%XEMIS(JI) + &
update_esm_isban.F90:                           KK%XFF(JI)*KK%XEMISF(JI)) / (1.-PEK%XPSN(JI))
update_esm_isban.F90:      IF(PEK%XEMIS(JI)/=XUNDEF.AND.ZEMIS_PATCH(IMASK,JP)/=0.) THEN
update_esm_isban.F90:                   PDIR_ALB,       PSCA_ALB,       S%XEMIS_NAT,   S%XTSRAD_NAT    )  
update_esm_isban.F90:PEMIS = S%XEMIS_NAT
update_rad_flake.F90:USE MODD_WATER_PAR, ONLY : XALBSCA_WAT, XALBWAT, XEMISWAT, XEMISWATICE
update_rad_flake.F90:USE MODD_SNOW_PAR, ONLY : XEMISSN
update_rad_flake.F90:  F%XEMIS     (:) = XEMISSN
update_rad_flake.F90:  F%XEMIS   (:) = XEMISWATICE
update_rad_flake.F90:  F%XEMIS     (:) = XEMISWAT    
update_rad_flake.F90:PEMIS_ATMOS(:) = F%XEMIS(:)
update_rad_isban.F90:USE MODD_SNOW_PAR,  ONLY : XRHOSMIN_ES,XRHOSMAX_ES,XSNOWDMIN,XEMISSN
update_rad_isban.F90:USE MODD_WATER_PAR, ONLY : XALBSCA_WAT, XEMISWAT, XALBWATICE, XEMISWATICE 
update_rad_isban.F90:    KK%XEMISF  (:) = XUNDEF
update_rad_isban.F90:      KK%XEMISF  (:) = XEMISWAT
update_rad_isban.F90:      KK%XEMISF  (:) = XEMISWATICE
update_rad_isban.F90:  ZEMISF(:) = KK%XEMISF(:)
update_rad_isban.F90:  ZEMISSN(:)   = XEMISSN
update_rad_isban.F90:  ZEMIST(:) = (1.-PEK%XPSN(:)-ZFF(:))*PEK%XEMIS(:) + PEK%XPSN(:) * XEMISSN + ZFF(:)*ZEMISF(:)
update_rad_sea.F90:USE MODD_WATER_PAR, ONLY : XEMISWAT, XEMISWATICE, &
update_rad_sea.F90:    S%XEMIS   (:) = XEMISWAT
update_rad_sea.F90:    S%XEMIS   (:) = XEMISWATICE
update_rad_sea.F90:  S%XEMIS   (:) = ( 1 - S%XSIC(:)) * XEMISWAT    + S%XSIC(:) * XEMISWATICE
update_rad_sea.F90:      S%XEMIS     (:) = XEMISWAT
update_rad_sea.F90:      S%XEMIS   (:) = XEMISWATICE
update_rad_sea.F90:      S%XEMIS     (:) = XEMISWAT
update_rad_sea.F90:      S%XEMIS   (:) = XEMISWATICE
update_rad_sea.F90:PEMIS_ATMOS(:) = S%XEMIS(:)
update_rad_sea.F90:   PTRAD(:) = (((1 - S%XSIC(:)) * XEMISWAT    * S%XSST (:)**4 + &
update_rad_sea.F90:                     S%XSIC(:)  * XEMISWATICE * S%XTICE(:)**4)/ &
update_rad_sea.F90:              S%XEMIS(:)) ** 0.25
update_rad_water.F90:USE MODD_WATER_PAR, ONLY : XEMISWAT, XEMISWATICE, &
update_rad_water.F90:    W%XEMIS   (:) = XEMISWAT
update_rad_water.F90:    W%XEMIS   (:) = XEMISWATICE
update_rad_water.F90:      W%XEMIS     (:) = XEMISWAT
update_rad_water.F90:      W%XEMIS   (:) = XEMISWATICE
update_rad_water.F90:      W%XEMIS     (:) = XEMISWAT
update_rad_water.F90:      W%XEMIS   (:) = XEMISWATICE
update_rad_water.F90:PEMIS_ATMOS(:) = W%XEMIS(:)
urban_lw_coef.F90:  PLW_WA_TO_WB(JJ)=ZLW(T%XEMIS_WALL(JJ),T%XEMIS_WALL(JJ),ZF_W_W(JJ),T%XT_WALL_A(JJ,1),T%XT_WALL_B(JJ,1))
urban_lw_coef.F90:  PLW_WA_TO_R(JJ) = ZLW(T%XEMIS_WALL(JJ),T%XEMIS_ROAD(JJ),ZF_R_W(JJ),T%XT_WALL_A(JJ,1),T%XT_ROAD(JJ,1))
urban_lw_coef.F90:  PLW_WB_TO_R(JJ) = ZLW(T%XEMIS_WALL(JJ),T%XEMIS_ROAD(JJ),ZF_R_W(JJ),T%XT_WALL_B(JJ,1),T%XT_ROAD(JJ,1))
urban_lw_coef.F90:  PLW_R_TO_WA(JJ) = ZLW(T%XEMIS_ROAD(JJ),T%XEMIS_WALL(JJ),ZF_W_R(JJ),T%XT_ROAD(JJ,1),T%XT_WALL_A(JJ,1))
urban_lw_coef.F90:  PLW_R_TO_WB(JJ) = ZLW(T%XEMIS_ROAD(JJ),T%XEMIS_WALL(JJ),ZF_W_R(JJ),T%XT_ROAD(JJ,1),T%XT_WALL_B(JJ,1))
urban_lw_coef.F90:    PLW_WA_TO_G(JJ) = ZLW(T%XEMIS_WALL(JJ),PEMIS_G(JJ),ZF_G_W(JJ),T%XT_WALL_A(JJ,1),PTS_G(JJ))
urban_lw_coef.F90:    PLW_WB_TO_G(JJ) = ZLW(T%XEMIS_WALL(JJ),PEMIS_G(JJ),ZF_G_W(JJ),T%XT_WALL_B(JJ,1),PTS_G(JJ))
urban_lw_coef.F90:    PLW_G_TO_WA(JJ) = ZLW(PEMIS_G(JJ),T%XEMIS_WALL(JJ),ZF_W_G(JJ),PTS_G(JJ),T%XT_WALL_A(JJ,1))
urban_lw_coef.F90:    PLW_G_TO_WB(JJ) = ZLW(PEMIS_G(JJ),T%XEMIS_WALL(JJ),ZF_W_G(JJ),PTS_G(JJ),T%XT_WALL_B(JJ,1))
urban_lw_coef.F90:    PLW_WA_TO_NR(JJ) = ZLW(T%XEMIS_WALL(JJ),T%TSNOW_ROAD%EMIS(JJ),ZF_R_W(JJ),T%XT_WALL_A(JJ,1),PTS_SR(JJ))
urban_lw_coef.F90:    PLW_WB_TO_NR(JJ) = ZLW(T%XEMIS_WALL(JJ),T%TSNOW_ROAD%EMIS(JJ),ZF_R_W(JJ),T%XT_WALL_B(JJ,1),PTS_SR(JJ))
urban_lw_coef.F90:    PLW_NR_TO_WA(JJ) = ZLW(T%TSNOW_ROAD%EMIS(JJ),T%XEMIS_WALL(JJ),ZF_W_NR(JJ),PTS_SR(JJ),T%XT_WALL_A(JJ,1))    
urban_lw_coef.F90:    PLW_NR_TO_WB(JJ) = ZLW(T%TSNOW_ROAD%EMIS(JJ),T%XEMIS_WALL(JJ),ZF_W_NR(JJ),PTS_SR(JJ),T%XT_WALL_B(JJ,1))    
urban_lw_coef.F90:  PLW_WIN_TO_R(JJ)= ZLW(ZEMIS_WIN(JJ),T%XEMIS_ROAD(JJ),ZF_R_WIN(JJ),B%XT_WIN1(JJ),T%XT_ROAD(JJ,1))
urban_lw_coef.F90:  PLW_R_TO_WIN(JJ)= ZLW(T%XEMIS_ROAD(JJ),ZEMIS_WIN(JJ),ZF_WIN_R(JJ),T%XT_ROAD(JJ,1),B%XT_WIN1(JJ))
urban_lw_coef.F90:  PLW_WIN_TO_WA(JJ) = ZLW(ZEMIS_WIN(JJ),T%XEMIS_WALL(JJ),ZF_W_WIN(JJ),B%XT_WIN1(JJ),T%XT_WALL_A(JJ,1))
urban_lw_coef.F90:  PLW_WIN_TO_WB(JJ) = ZLW(ZEMIS_WIN(JJ),T%XEMIS_WALL(JJ),ZF_W_WIN(JJ),B%XT_WIN1(JJ),T%XT_WALL_B(JJ,1))
urban_lw_coef.F90:  PLW_WA_TO_WIN(JJ) = ZLW(T%XEMIS_WALL(JJ),ZEMIS_WIN(JJ),ZF_WIN_W(JJ),T%XT_WALL_A(JJ,1),B%XT_WIN1(JJ))
urban_lw_coef.F90:  PLW_WB_TO_WIN(JJ) = ZLW(T%XEMIS_WALL(JJ),ZEMIS_WIN(JJ),ZF_WIN_W(JJ),T%XT_WALL_B(JJ,1),B%XT_WIN1(JJ))
urban_lw_coef.F90:  PLW_S_TO_WA(JJ)  = ZLW(1.,T%XEMIS_WALL(JJ),T%XSVF_WALL(JJ),ZT_S(JJ),T%XT_WALL_A(JJ,1))
urban_lw_coef.F90:  PLW_S_TO_WB(JJ)  = ZLW(1.,T%XEMIS_WALL(JJ),T%XSVF_WALL(JJ),ZT_S(JJ),T%XT_WALL_B(JJ,1))
urban_lw_coef.F90:  PLW_S_TO_R(JJ)  = ZLW(1.,T%XEMIS_ROAD(JJ),T%XSVF_ROAD(JJ),ZT_S(JJ),T%XT_ROAD(JJ,1))  
vegetation_evol.F90:    WHERE( PEK%XVEG(:) > 0. ) PEK%XEMIS(:)= EMIS_FROM_VEG(PEK%XVEG(:),PK%XVEGTYPE_PATCH(:,:))
vegetation_update.F90:      PEK%XEMIS      (:) = 0.94                
wall_layer_e_budget.F90:                   (1 - T%XEMIS_WALL(:))/T%XEMIS_WALL(:) * PABS_LW_WL(:)
write_cover_tex_water.F90:USE MODD_WATER_PAR,      ONLY : XALBWAT, XALBSCA_WAT, XEMISWAT
write_cover_tex_water.F90:      WRITE(YSTRING6, FMT='(F4.2)') XEMISWAT
write_diag_ch_aggr.F90:  CALL WRITE_SURF(HSELECT,HPROGRAM,YRECFM,CHE%TSEMISS(JSPEC)%XEMISDATA,IRESP,HCOMMENT=YCOMMENT,&
write_diag_ch_snapn.F90:  CALL WRITE_SURF(HSELECT, HPROGRAM,YRECFM,CHN%XEMIS_FIELDS(:,JSPEC),IRESP,HCOMMENT=YCOMMENT)
write_diag_pgd_grdnn.F90: CALL WRITE_SURF(HSELECT,HPROGRAM,YRECFM,PEK%XEMIS(:),IRESP,HCOMMENT=YCOMMENT)
write_diag_pgd_isban.F90:              NP%AL(JP)%NR_P,NPE%AL(JP)%XEMIS(:),ILU,S%XWORK_WR)
write_diag_pgd_tebn.F90: CALL WRITE_SURF(HSELECT,HPROGRAM,YRECFM,T%XEMIS_ROOF(:),IRESP,HCOMMENT=YCOMMENT)
write_diag_pgd_tebn.F90: CALL WRITE_SURF(HSELECT,HPROGRAM,YRECFM,T%XEMIS_WALL(:),IRESP,HCOMMENT=YCOMMENT)
write_diag_pgd_tebn.F90: CALL WRITE_SURF(HSELECT,HPROGRAM,YRECFM,T%XEMIS_ROAD(:),IRESP,HCOMMENT=YCOMMENT)
write_diag_seb_surf_atmn.F90:  CALL WRITE_SURF(DGO%CSELECT,HPROGRAM,YRECFM,D%XEMIS(:),IRESP,HCOMMENT=YCOMMENT)
writesurf_ch_emisn.F90:REAL,DIMENSION(SIZE(CHE%XEMIS_FIELDS,1),KSIZE) :: ZWORK2D
writesurf_ch_emisn.F90:ZWORK2D(:,:) = CHE%XEMIS_FIELDS(:,IINDEX(:))
writesurf_snapn.F90:                 HPROGRAM,YRECFM,CHN%XEMIS_FIELDS_SNAP(:,JSNAP,JSPEC),IRESP,YCOMMENT)
